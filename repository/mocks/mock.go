// Code generated by MockGen. DO NOT EDIT.
// Source: tzregion/repository/mongodb (interfaces: TodoStorage)

// Package mock_mongodb is a generated GoMock package.
package mock_mongodb

import (
	context "context"
	reflect "reflect"
	model "tzregion/model"

	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockTodoStorage is a mock of TodoStorage interface.
type MockTodoStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTodoStorageMockRecorder
}

// MockTodoStorageMockRecorder is the mock recorder for MockTodoStorage.
type MockTodoStorageMockRecorder struct {
	mock *MockTodoStorage
}

// NewMockTodoStorage creates a new mock instance.
func NewMockTodoStorage(ctrl *gomock.Controller) *MockTodoStorage {
	mock := &MockTodoStorage{ctrl: ctrl}
	mock.recorder = &MockTodoStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoStorage) EXPECT() *MockTodoStorageMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockTodoStorage) CreateTodo(arg0 context.Context, arg1 *model.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockTodoStorageMockRecorder) CreateTodo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockTodoStorage)(nil).CreateTodo), arg0, arg1)
}

// DeleteTodoById mocks base method.
func (m *MockTodoStorage) DeleteTodoById(arg0 context.Context, arg1 primitive.ObjectID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTodoById", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTodoById indicates an expected call of DeleteTodoById.
func (mr *MockTodoStorageMockRecorder) DeleteTodoById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTodoById", reflect.TypeOf((*MockTodoStorage)(nil).DeleteTodoById), arg0, arg1)
}

// FindAll mocks base method.
func (m *MockTodoStorage) FindAll(arg0 context.Context, arg1 string) ([]*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", arg0, arg1)
	ret0, _ := ret[0].([]*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockTodoStorageMockRecorder) FindAll(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockTodoStorage)(nil).FindAll), arg0, arg1)
}

// FindByTitle mocks base method.
func (m *MockTodoStorage) FindByTitle(arg0 context.Context, arg1 string) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByTitle", arg0, arg1)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByTitle indicates an expected call of FindByTitle.
func (mr *MockTodoStorageMockRecorder) FindByTitle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByTitle", reflect.TypeOf((*MockTodoStorage)(nil).FindByTitle), arg0, arg1)
}

// FindTodoById mocks base method.
func (m *MockTodoStorage) FindTodoById(arg0 context.Context, arg1 primitive.ObjectID) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTodoById", arg0, arg1)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTodoById indicates an expected call of FindTodoById.
func (mr *MockTodoStorageMockRecorder) FindTodoById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTodoById", reflect.TypeOf((*MockTodoStorage)(nil).FindTodoById), arg0, arg1)
}

// UpdateTodoById mocks base method.
func (m *MockTodoStorage) UpdateTodoById(arg0 context.Context, arg1 primitive.ObjectID, arg2 *model.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTodoById", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTodoById indicates an expected call of UpdateTodoById.
func (mr *MockTodoStorageMockRecorder) UpdateTodoById(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTodoById", reflect.TypeOf((*MockTodoStorage)(nil).UpdateTodoById), arg0, arg1, arg2)
}
