basePath: /
definitions:
  handler.Todo:
    properties:
      activeAt:
        type: string
      title:
        maxLength: 200
        type: string
    required:
    - activeAt
    - title
    type: object
  model.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  model.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  model.Todo:
    properties:
      activeAt:
        type: string
      createdAt:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API server for todolist Application
  title: QR
  version: "1.0"
paths:
  /api/todo-list/tasks:
    post:
      consumes:
      - application/json
      description: Create a new todo item with the provided details
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/handler.Todo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new todo item
      tags:
      - Todo
  /api/todo-list/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo item with the provided ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete a todo item by ID
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: Update a todo item with the provided ID and details
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/handler.Todo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update a todo item
      tags:
      - Todo
  /api/todo-list/tasks/{id}/status/{done}:
    put:
      consumes:
      - application/json
      description: Mark a todo item with the provided ID as done or not done
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo status (done or not done)
        in: path
        name: done
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Mark a todo item as done
      tags:
      - Todo
  /api/todo-list/tasks/{status}:
    get:
      consumes:
      - application/json
      description: Get a list of all todo items based on the provided status
      parameters:
      - description: Todo status (active, done, or other)
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get all todo items by status
      tags:
      - Todo
swagger: "2.0"
